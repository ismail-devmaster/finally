{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,oKAAc,IAAI;AAE/B,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,oKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,sKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,6LAAC,mLAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport {\n  CaretSortIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"@radix-ui/react-icons\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <CaretSortIcon className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUpIcon />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDownIcon />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/receptionist/newAppointments/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardFooter,\r\n} from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent } from \"@/components/ui/tabs\";\r\nimport { CalendarIcon, Clock, User } from \"lucide-react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\n\r\ninterface Patient {\r\n  fullName: string;\r\n  age: number;\r\n  sex: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  dateOfBirth: string;\r\n  medicalHistory: string;\r\n}\r\n\r\ninterface Appointment {\r\n  id: number;\r\n  date: string;\r\n  time: string;\r\n  doctor: string;\r\n  reason: string;\r\n  notes: string;\r\n  patient: Patient;\r\n}\r\n\r\nconst Component = () => {\r\n  const [upcomingAppointments, setUpcomingAppointments] = useState<\r\n    Appointment[]\r\n  >([\r\n    {\r\n      id: 1,\r\n      date: \"2023-06-15\",\r\n      time: \"10:00 AM\",\r\n      doctor: \"Dr. Smith\",\r\n      reason: \"Annual checkup\",\r\n      notes:\r\n        \"Remember to bring your health insurance card and a list of current medications.\",\r\n      patient: {\r\n        fullName: \"John Doe\",\r\n        age: 35,\r\n        sex: \"Male\",\r\n        phoneNumber: \"123-456-7890\",\r\n        email: \"john.doe@example.com\",\r\n        dateOfBirth: \"1988-03-15\",\r\n        medicalHistory:\r\n          \"Allergies: Penicillin, Peanuts; Chronic Conditions: Hypertension (2015), Type 2 Diabetes (2018);Past Surgeries: Appendectomy (2010)\",\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"2023-06-18\",\r\n      time: \"2:30 PM\",\r\n      doctor: \"Dr. Johnson\",\r\n      reason: \"Follow-up consultation\",\r\n      notes:\r\n        \"Bring recent lab test results and any questions you have about your treatment plan.\",\r\n      patient: {\r\n        fullName: \"Jane Smith\",\r\n        age: 28,\r\n        sex: \"Female\",\r\n        phoneNumber: \"987-654-3210\",\r\n        email: \"jane.smith@example.com\",\r\n        dateOfBirth: \"1995-07-22\",\r\n        medicalHistory: \"Allergic to penicillin.\",\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"2023-06-20\",\r\n      time: \"11:15 AM\",\r\n      doctor: \"Dr. Williams\",\r\n      reason: \"Dental cleaning\",\r\n      notes:\r\n        \"Please arrive 15 minutes early to fill out necessary paperwork. Don't forget to brush and floss before your appointment.\",\r\n      patient: {\r\n        fullName: \"Bob Johnson\",\r\n        age: 42,\r\n        sex: \"Male\",\r\n        phoneNumber: \"555-123-4567\",\r\n        email: \"bob.johnson@example.com\",\r\n        dateOfBirth: \"1981-11-30\",\r\n        medicalHistory: \"History of hypertension.\",\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const [isRescheduleDialogOpen, setIsRescheduleDialogOpen] = useState(false);\r\n  const [isPatientInfoDialogOpen, setIsPatientInfoDialogOpen] = useState(false);\r\n  const [selectedAppointment, setSelectedAppointment] =\r\n    useState<Appointment | null>(null);\r\n  const [newDate, setNewDate] = useState(\"\");\r\n  const [newTime, setNewTime] = useState(\"\");\r\n  const [newDoctor, setNewDoctor] = useState(\"\");\r\n\r\n  const availableDoctors = [\r\n    \"Dr. Smith\",\r\n    \"Dr. Johnson\",\r\n    \"Dr. Williams\",\r\n    \"Dr. Brown\",\r\n    \"Dr. Davis\",\r\n  ];\r\n\r\n  const handleReschedule = (appointment: Appointment) => {\r\n    setSelectedAppointment(appointment);\r\n    setNewDate(appointment.date);\r\n    setNewTime(appointment.time);\r\n    setNewDoctor(appointment.doctor);\r\n    setIsRescheduleDialogOpen(true);\r\n  };\r\n\r\n  const handleRescheduleConfirm = () => {\r\n    if (selectedAppointment) {\r\n      const updatedAppointments = upcomingAppointments.map((apt) =>\r\n        apt.id === selectedAppointment.id\r\n          ? { ...apt, date: newDate, time: newTime, doctor: newDoctor }\r\n          : apt\r\n      );\r\n      setUpcomingAppointments(updatedAppointments);\r\n      setIsRescheduleDialogOpen(false);\r\n      setUpcomingAppointments((prevAppointments) =>\r\n        prevAppointments.filter((apt) => apt.id !== selectedAppointment.id)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCancel = (id: number) => {\r\n    setUpcomingAppointments((prevAppointments) =>\r\n      prevAppointments.filter((apt) => apt.id !== id)\r\n    );\r\n  };\r\n\r\n  const handleConfirm = (id: number) => {\r\n    setUpcomingAppointments((prevAppointments) =>\r\n      prevAppointments.filter((apt) => apt.id !== id)\r\n    );\r\n  };\r\n\r\n  const handlePatientInfoClick = (appointment: Appointment) => {\r\n    setSelectedAppointment(appointment);\r\n    setIsPatientInfoDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tabs defaultValue=\"upcoming\">\r\n        <TabsContent value=\"upcoming\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {upcomingAppointments.map((appointment) => (\r\n              <Card\r\n                key={appointment.id}\r\n                className=\"hover:shadow-lg transition-shadow duration-300\"\r\n              >\r\n                <CardHeader className=\"bg-blue-50 dark:bg-gray-700\">\r\n                  <CardTitle className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center\">\r\n                      <CalendarIcon className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n                      {appointment.date}\r\n                    </div>\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      className=\"p-0 hover:bg-transparent\"\r\n                      onClick={() => handlePatientInfoClick(appointment)}\r\n                    >\r\n                      <span className=\"text-blue-500 hover:underline\">\r\n                        {appointment.patient.fullName}\r\n                      </span>\r\n                    </Button>\r\n                  </CardTitle>\r\n                  <CardDescription className=\"flex items-center\">\r\n                    <Clock className=\"mr-2 h-4 w-4 text-gray-500 dark:text-gray-400\" />\r\n                    {appointment.time}\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"pt-4\">\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <User className=\"mr-2 h-4 w-4 text-gray-500 dark:text-gray-400\" />\r\n                    <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n                      {appointment.doctor}\r\n                    </p>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n                    {appointment.reason}\r\n                  </p>\r\n                  <div className=\"bg-gray-100 dark:bg-gray-800 p-3 rounded-md\">\r\n                    <h4 className=\"text-sm font-semibold text-gray-900 dark:text-white mb-2\">\r\n                      Additional Notes:\r\n                    </h4>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                      {appointment.notes}\r\n                    </p>\r\n                  </div>\r\n                </CardContent>\r\n                <CardFooter className=\"flex justify-between\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    className=\"border-gray-200 dark:border-gray-700\"\r\n                    onClick={() => handleReschedule(appointment)}\r\n                  >\r\n                    Reschedule\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"destructive\"\r\n                    onClick={() => handleCancel(appointment.id)}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"default\"\r\n                    onClick={() => handleConfirm(appointment.id)}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      <Dialog\r\n        open={isRescheduleDialogOpen}\r\n        onOpenChange={setIsRescheduleDialogOpen}\r\n      >\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Reschedule Appointment</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"new-date\" className=\"text-right\">\r\n                New Date\r\n              </Label>\r\n              <Input\r\n                id=\"new-date\"\r\n                type=\"date\"\r\n                value={newDate}\r\n                onChange={(e) => setNewDate(e.target.value)}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"new-time\" className=\"text-right\">\r\n                New Time\r\n              </Label>\r\n              <Input\r\n                id=\"new-time\"\r\n                type=\"time\"\r\n                value={newTime}\r\n                onChange={(e) => setNewTime(e.target.value)}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"new-doctor\" className=\"text-right\">\r\n                New Doctor\r\n              </Label>\r\n              <Select\r\n                value={newDoctor}\r\n                onValueChange={(value) => setNewDoctor(value)}\r\n              >\r\n                <SelectTrigger className=\"col-span-3\">\r\n                  <SelectValue placeholder=\"Select a doctor\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {availableDoctors.map((doctor) => (\r\n                    <SelectItem key={doctor} value={doctor}>\r\n                      {doctor}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setIsRescheduleDialogOpen(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleRescheduleConfirm}>\r\n              Confirm Reschedule\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={isPatientInfoDialogOpen}\r\n        onOpenChange={setIsPatientInfoDialogOpen}\r\n      >\r\n        <DialogContent className=\"sm:max-w-[425px] overflow-hidden\">\r\n          <DialogHeader>\r\n            <DialogTitle>Patient Information</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"grid gap-6 py-4 max-h-[60vh] overflow-y-auto pr-6 -mr-6\">\r\n            {selectedAppointment && (\r\n              <>\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">\r\n                    Personal Information\r\n                  </h4>\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label className=\"text-xs\">Full Name</Label>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {selectedAppointment.patient.fullName}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Label className=\"text-xs\">Age</Label>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {selectedAppointment.patient.age}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Label className=\"text-xs\">Date of Birth</Label>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {selectedAppointment.patient.dateOfBirth}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Label className=\"text-xs\">Sex</Label>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {selectedAppointment.patient.sex}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">\r\n                    Contact Information\r\n                  </h4>\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label className=\"text-xs\">Phone Number</Label>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {selectedAppointment.patient.phoneNumber}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Label className=\"text-xs\">Email</Label>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {selectedAppointment.patient.email}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"font-medium text-sm text-gray-500 dark:text-gray-400\">\r\n                    Medical History\r\n                  </h4>\r\n                  <p className=\"text-sm whitespace-pre-wrap\">\r\n                    {selectedAppointment.patient.medicalHistory}\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <DialogFooter className=\"sm:justify-start\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"secondary\"\r\n              onClick={() => setIsPatientInfoDialogOpen(false)}\r\n              className=\"transition-all duration-200 ease-in-out hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}