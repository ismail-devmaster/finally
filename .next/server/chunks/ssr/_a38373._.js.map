{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport {\n  CaretSortIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"@radix-ui/react-icons\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <CaretSortIcon className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUpIcon />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDownIcon />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,0BAAY,sMAAM,UAAU,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,sKAAmB,IAAI;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,sKAAmB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,sMAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,sMAAM,UAAU,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gQACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,gBAAgB,mKAAgB,OAAO;AAE7C,MAAM,eAAe,mKAAgB,MAAM;AAE3C,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,mKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,mKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,8OAAC,gLAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,sMAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/receptionist/patients/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Plus, Search, Edit, Trash2 } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\n\r\nconst ReceptionistPatient = () => {\r\n  // export function ReceptionistPatient() {\r\n  const [patients, setPatients] = React.useState([\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      contact: \"john@example.com\",\r\n      lastVisit: \"2023-05-15\",\r\n      medicalHistory: [\r\n        {\r\n          condition: \"Hypertension\",\r\n          diagnosisDate: \"2020-03-10\",\r\n          medications: \"Lisinopril\",\r\n        },\r\n        {\r\n          condition: \"Diabetes\",\r\n          diagnosisDate: \"2019-11-22\",\r\n          medications: \"Metformin\",\r\n        },\r\n      ],\r\n      appointmentPreferences: {\r\n        preferredDays: [\"Monday\", \"Wednesday\"],\r\n        preferredTime: \"Morning\",\r\n        notes: \"Prefers early morning appointments\",\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Smith\",\r\n      contact: \"jane@example.com\",\r\n      lastVisit: \"2023-06-02\",\r\n      medicalHistory: [\r\n        {\r\n          condition: \"Asthma\",\r\n          diagnosisDate: \"2018-07-15\",\r\n          medications: \"Albuterol inhaler\",\r\n        },\r\n      ],\r\n      appointmentPreferences: {\r\n        preferredDays: [\"Tuesday\", \"Thursday\"],\r\n        preferredTime: \"Afternoon\",\r\n        notes: \"Prefers late afternoon appointments\",\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const [selectedPatient, setSelectedPatient] = React.useState(null);\r\n  const [isAddingPatient, setIsAddingPatient] = React.useState(false);\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n\r\n  const filteredPatients = patients.filter(\r\n    (patient) =>\r\n      patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      patient.contact.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleAddPatient = (newPatient) => {\r\n    setPatients([...patients, { ...newPatient, id: patients.length + 1 }]);\r\n    setIsAddingPatient(false);\r\n  };\r\n\r\n  const handleUpdatePatient = (updatedPatient) => {\r\n    setPatients(\r\n      patients.map((p) => (p.id === updatedPatient.id ? updatedPatient : p))\r\n    );\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  const handleDeletePatient = (id) => {\r\n    setPatients(patients.filter((p) => p.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto\">\r\n      <h1 className=\"text-4xl font-extrabold text-gray-900 mb-8 text-center dark:text-white\">\r\n        Patient Management\r\n      </h1>\r\n      <Card className=\"col-span-2 mb-6\">\r\n        <CardHeader>\r\n          <CardTitle>Patient Management</CardTitle>\r\n          <CardDescription>\r\n            View, add, or update patient information\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex justify-between mb-4\">\r\n            <div className=\"w-1/3\">\r\n              <Label htmlFor=\"search-patients\">Search Patients</Label>\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                <Input\r\n                  id=\"search-patients\"\r\n                  placeholder=\"Search patients...\"\r\n                  className=\"pl-8\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Dialog open={isAddingPatient} onOpenChange={setIsAddingPatient}>\r\n              <DialogTrigger asChild>\r\n                <Button onClick={() => setIsAddingPatient(true)}>\r\n                  <Plus className=\"mr-2 h-4 w-4\" /> Add New Patient\r\n                </Button>\r\n              </DialogTrigger>\r\n              <DialogContent className=\"max-w-2xl\">\r\n                <DialogHeader>\r\n                  <DialogTitle>Add New Patient</DialogTitle>\r\n                  <DialogDescription>\r\n                    Enter the new patient&apos;s information below.\r\n                  </DialogDescription>\r\n                </DialogHeader>\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    const formData = new FormData(e.target);\r\n                    const newPatient = {\r\n                      name: formData.get(\"name\"),\r\n                      contact: formData.get(\"contact\"),\r\n                      medicalHistory: [\r\n                        {\r\n                          condition: formData.get(\"condition\"),\r\n                          diagnosisDate: formData.get(\"diagnosisDate\"),\r\n                          medications: formData.get(\"medications\"),\r\n                        },\r\n                      ],\r\n                      appointmentPreferences: {\r\n                        preferredDays: formData.getAll(\"preferredDays\"),\r\n                        preferredTime: formData.get(\"preferredTime\"),\r\n                        notes: formData.get(\"notes\"),\r\n                      },\r\n                    };\r\n                    handleAddPatient(newPatient);\r\n                  }}\r\n                >\r\n                  <div className=\"grid gap-4 py-4\">\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <Label htmlFor=\"name\">Name</Label>\r\n                        <Input id=\"name\" name=\"name\" required />\r\n                      </div>\r\n                      <div>\r\n                        <Label htmlFor=\"contact\">Contact</Label>\r\n                        <Input\r\n                          id=\"contact\"\r\n                          name=\"contact\"\r\n                          type=\"email\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <Separator />\r\n                    <h4 className=\"font-medium\">Medical History</h4>\r\n                    <div className=\"grid grid-cols-3 gap-4\">\r\n                      <div>\r\n                        <Label htmlFor=\"condition\">Condition</Label>\r\n                        <Input id=\"condition\" name=\"condition\" />\r\n                      </div>\r\n                      <div>\r\n                        <Label htmlFor=\"diagnosisDate\">Diagnosis Date</Label>\r\n                        <Input\r\n                          id=\"diagnosisDate\"\r\n                          name=\"diagnosisDate\"\r\n                          type=\"date\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Label htmlFor=\"medications\">Medications</Label>\r\n                        <Input id=\"medications\" name=\"medications\" />\r\n                      </div>\r\n                    </div>\r\n                    <Separator />\r\n                    <h4 className=\"font-medium\">Appointment Preferences</h4>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <Label htmlFor=\"preferredDays\">Preferred Days</Label>\r\n                        <Select name=\"preferredDays\" multiple>\r\n                          <SelectTrigger>\r\n                            <SelectValue placeholder=\"Select days\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            {[\r\n                              \"Monday\",\r\n                              \"Tuesday\",\r\n                              \"Wednesday\",\r\n                              \"Thursday\",\r\n                              \"Friday\",\r\n                            ].map((day) => (\r\n                              <SelectItem key={day} value={day}>\r\n                                {day}\r\n                              </SelectItem>\r\n                            ))}\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                      <div>\r\n                        <Label htmlFor=\"preferredTime\">Preferred Time</Label>\r\n                        <Select name=\"preferredTime\">\r\n                          <SelectTrigger>\r\n                            <SelectValue placeholder=\"Select time\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"Morning\">Morning</SelectItem>\r\n                            <SelectItem value=\"Afternoon\">Afternoon</SelectItem>\r\n                            <SelectItem value=\"Evening\">Evening</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"notes\">Additional Notes</Label>\r\n                      <Textarea id=\"notes\" name=\"notes\" />\r\n                    </div>\r\n                  </div>\r\n                  <DialogFooter>\r\n                    <Button type=\"submit\">Add Patient</Button>\r\n                  </DialogFooter>\r\n                </form>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Name</TableHead>\r\n                <TableHead>Contact</TableHead>\r\n                <TableHead>Last Visit</TableHead>\r\n                <TableHead>Medical History</TableHead>\r\n                <TableHead>Appointment Preferences</TableHead>\r\n                <TableHead>Actions</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {filteredPatients.map((patient) => (\r\n                <TableRow key={patient.id}>\r\n                  <TableCell>{patient.name}</TableCell>\r\n                  <TableCell>{patient.contact}</TableCell>\r\n                  <TableCell>{patient.lastVisit}</TableCell>\r\n                  <TableCell>\r\n                    {patient.medicalHistory.map((history, index) => (\r\n                      <div key={index} className=\"mb-1\">\r\n                        {history.condition}\r\n                      </div>\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {patient.appointmentPreferences.preferredDays.join(\", \")} -{\" \"}\r\n                    {patient.appointmentPreferences.preferredTime}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex space-x-2\">\r\n                      <Dialog>\r\n                        <DialogTrigger asChild>\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() => setSelectedPatient(patient)}\r\n                          >\r\n                            <Edit className=\"mr-2 h-4 w-4\" /> View/Edit\r\n                          </Button>\r\n                        </DialogTrigger>\r\n                        <DialogContent className=\"max-w-2xl\">\r\n                          <DialogHeader>\r\n                            <DialogTitle>Patient Information</DialogTitle>\r\n                            <DialogDescription>\r\n                              View or update patient details.\r\n                            </DialogDescription>\r\n                          </DialogHeader>\r\n                          {selectedPatient && (\r\n                            <form\r\n                              onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                const formData = new FormData(e.target);\r\n                                const updatedPatient = {\r\n                                  ...selectedPatient,\r\n                                  name: formData.get(\"name\"),\r\n                                  contact: formData.get(\"contact\"),\r\n\r\n                                  medicalHistory: [\r\n                                    {\r\n                                      condition: formData.get(\"condition\"),\r\n                                      diagnosisDate:\r\n                                        formData.get(\"diagnosisDate\"),\r\n                                      medications: formData.get(\"medications\"),\r\n                                    },\r\n                                  ],\r\n                                  appointmentPreferences: {\r\n                                    preferredDays:\r\n                                      formData.getAll(\"preferredDays\"),\r\n                                    preferredTime:\r\n                                      formData.get(\"preferredTime\"),\r\n                                    notes: formData.get(\"notes\"),\r\n                                  },\r\n                                };\r\n                                handleUpdatePatient(updatedPatient);\r\n                              }}\r\n                            >\r\n                              <div className=\"grid gap-4 py-4\">\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-name\">Name</Label>\r\n                                    <Input\r\n                                      id=\"edit-name\"\r\n                                      name=\"name\"\r\n                                      defaultValue={selectedPatient.name}\r\n                                      required\r\n                                    />\r\n                                  </div>\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-contact\">\r\n                                      Contact\r\n                                    </Label>\r\n                                    <Input\r\n                                      id=\"edit-contact\"\r\n                                      name=\"contact\"\r\n                                      type=\"email\"\r\n                                      defaultValue={selectedPatient.contact}\r\n                                      required\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <Separator />\r\n                                <h4 className=\"font-medium\">Medical History</h4>\r\n                                <div className=\"grid grid-cols-3 gap-4\">\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-condition\">\r\n                                      Condition\r\n                                    </Label>\r\n                                    <Input\r\n                                      id=\"edit-condition\"\r\n                                      name=\"condition\"\r\n                                      defaultValue={\r\n                                        selectedPatient.medicalHistory[0]\r\n                                          ?.condition\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-diagnosisDate\">\r\n                                      Diagnosis Date\r\n                                    </Label>\r\n                                    <Input\r\n                                      id=\"edit-diagnosisDate\"\r\n                                      name=\"diagnosisDate\"\r\n                                      type=\"date\"\r\n                                      defaultValue={\r\n                                        selectedPatient.medicalHistory[0]\r\n                                          ?.diagnosisDate\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-medications\">\r\n                                      Medications\r\n                                    </Label>\r\n                                    <Input\r\n                                      id=\"edit-medications\"\r\n                                      name=\"medications\"\r\n                                      defaultValue={\r\n                                        selectedPatient.medicalHistory[0]\r\n                                          ?.medications\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <Separator />\r\n                                <h4 className=\"font-medium\">\r\n                                  Appointment Preferences\r\n                                </h4>\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-preferredDays\">\r\n                                      Preferred Days\r\n                                    </Label>\r\n                                    <Select\r\n                                      name=\"preferredDays\"\r\n                                      defaultValue={\r\n                                        selectedPatient.appointmentPreferences\r\n                                          .preferredDays\r\n                                      }\r\n                                      multiple\r\n                                    >\r\n                                      <SelectTrigger>\r\n                                        <SelectValue placeholder=\"Select days\" />\r\n                                      </SelectTrigger>\r\n                                      <SelectContent>\r\n                                        {[\r\n                                          \"Monday\",\r\n                                          \"Tuesday\",\r\n                                          \"Wednesday\",\r\n                                          \"Thursday\",\r\n                                          \"Friday\",\r\n                                        ].map((day) => (\r\n                                          <SelectItem key={day} value={day}>\r\n                                            {day}\r\n                                          </SelectItem>\r\n                                        ))}\r\n                                      </SelectContent>\r\n                                    </Select>\r\n                                  </div>\r\n                                  <div>\r\n                                    <Label htmlFor=\"edit-preferredTime\">\r\n                                      Preferred Time\r\n                                    </Label>\r\n                                    <Select\r\n                                      name=\"preferredTime\"\r\n                                      defaultValue={\r\n                                        selectedPatient.appointmentPreferences\r\n                                          .preferredTime\r\n                                      }\r\n                                    >\r\n                                      <SelectTrigger>\r\n                                        <SelectValue placeholder=\"Select time\" />\r\n                                      </SelectTrigger>\r\n                                      <SelectContent>\r\n                                        <SelectItem value=\"Morning\">\r\n                                          Morning\r\n                                        </SelectItem>\r\n                                        <SelectItem value=\"Afternoon\">\r\n                                          Afternoon\r\n                                        </SelectItem>\r\n                                        <SelectItem value=\"Evening\">\r\n                                          Evening\r\n                                        </SelectItem>\r\n                                      </SelectContent>\r\n                                    </Select>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <Label htmlFor=\"edit-notes\">\r\n                                    Additional Notes\r\n                                  </Label>\r\n                                  <Textarea\r\n                                    id=\"edit-notes\"\r\n                                    name=\"notes\"\r\n                                    defaultValue={\r\n                                      selectedPatient.appointmentPreferences\r\n                                        .notes\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <DialogFooter>\r\n                                <Button type=\"submit\">Update Patient</Button>\r\n                              </DialogFooter>\r\n                            </form>\r\n                          )}\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDeletePatient(patient.id)}\r\n                      >\r\n                        <Trash2 className=\"mr-2 h-4 w-4\" /> Delete\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default ReceptionistPatient;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}