{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/patient/layout.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Bell,\r\n//   Calendar,\r\n//   CreditCard,\r\n//   FileText,\r\n//   Menu,\r\n//   Moon,\r\n//   Sun,\r\n//   User,\r\n// } from \"lucide-react\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n// import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n// import {\r\n//   Tooltip,\r\n//   TooltipContent,\r\n//   TooltipProvider,\r\n//   TooltipTrigger,\r\n// } from \"@/components/ui/tooltip\";\r\n// import {\r\n//   DropdownMenu,\r\n//   DropdownMenuContent,\r\n//   DropdownMenuItem,\r\n//   DropdownMenuLabel,\r\n//   DropdownMenuSeparator,\r\n//   DropdownMenuTrigger,\r\n// } from \"@/components/ui/dropdown-menu\";\r\n// import Link from \"next/link\";\r\n\r\n// const PatientDashboardComponent = ({\r\n//   children,\r\n// }: {\r\n//   children: React.ReactNode;\r\n// }) => {\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n//   const toggleDarkMode = () => {\r\n//     setDarkMode(!darkMode);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (darkMode) {\r\n//       document.documentElement.classList.add(\"dark\");\r\n//     } else {\r\n//       document.documentElement.classList.remove(\"dark\");\r\n//     }\r\n//   }, [darkMode]);\r\n\r\n//   return (\r\n//     <div className={`flex h-screen overflow-hidden ${darkMode ? \"dark\" : \"\"}`}>\r\n//       {/* Sidebar */}\r\n//       <aside\r\n//         className={`${\r\n//           sidebarOpen ? \"w-64\" : \"w-20\"\r\n//         } overflow-y-auto bg-gray-800 transition-all duration-300 ease-in-out flex flex-col`}\r\n//       >\r\n//         <div className=\"h-full px-3 py-4 overflow-y-auto bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700\">\r\n//           <Button\r\n//             variant=\"ghost\"\r\n//             onClick={() => setSidebarOpen(!sidebarOpen)}\r\n//             className=\"mb-5\"\r\n//           >\r\n//             <Menu className=\"h-6 w-6\" />\r\n//           </Button>\r\n//           <Link href={\"/patient\"} className=\"flex items-center mb-5\">\r\n//             <Avatar className=\"h-10 w-10\">\r\n//               <AvatarImage\r\n//                 src=\"/placeholder.svg?height=40&width=40\"\r\n//                 alt=\"Patient\"\r\n//               />\r\n//               <AvatarFallback>JD</AvatarFallback>\r\n//             </Avatar>\r\n//             {sidebarOpen && (\r\n//               <span className=\"ml-3 text-xl font-semibold text-gray-800 dark:text-white\">\r\n//                 John Doe\r\n//               </span>\r\n//             )}\r\n//           </Link>\r\n//           <ul className=\"space-y-2\">\r\n//             <li>\r\n//               <Link\r\n//                 className=\"flex items-center px-4 py-2 mt-4\"\r\n//                 href={\"/patient/profile\"}\r\n//               >\r\n//                 <User className=\"mr-2 h-4 w-4\" />\r\n//                 {sidebarOpen && <span>My Profile</span>}\r\n//               </Link>\r\n//             </li>\r\n//             <li>\r\n//               <Link\r\n//                 className=\"flex items-center px-4 py-2 mt-4\"\r\n//                 href={\"/patient/appointments\"}\r\n//               >\r\n//                 <Calendar className=\"mr-2 h-4 w-4\" />\r\n//                 {sidebarOpen && <span>Appointments</span>}\r\n//               </Link>\r\n//             </li>\r\n//             <li>\r\n//               <Link\r\n//                 className=\"flex items-center px-4 py-2 mt-4\"\r\n//                 href={\"/patient/queue\"}\r\n//               >\r\n//                 <FileText className=\"mr-2 h-4 w-4\" />\r\n//                 {sidebarOpen && <span>Queue Status</span>}\r\n//               </Link>\r\n//             </li>\r\n//             <li>\r\n//               <Link\r\n//                 className=\"flex items-center px-4 py-2 mt-4\"\r\n//                 href={\"/patient/payments\"}\r\n//               >\r\n//                 <CreditCard className=\"mr-2 h-4 w-4\" />\r\n//                 {sidebarOpen && <span>Payments</span>}\r\n//               </Link>\r\n//             </li>\r\n//           </ul>\r\n//         </div>\r\n//       </aside>\r\n\r\n//       <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 dark:bg-gray-900\">\r\n//         <header className=\"bg-white dark:bg-gray-800 shadow-md rounded-lg mb-0 mx-10 my-4\">\r\n//           <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\r\n//             <div className=\"flex items-center space-x-4\">\r\n//               <TooltipProvider>\r\n//                 <Tooltip>\r\n//                   <TooltipTrigger asChild>\r\n//                     <Button\r\n//                       variant=\"ghost\"\r\n//                       size=\"icon\"\r\n//                       onClick={toggleDarkMode}\r\n//                     >\r\n//                       {darkMode ? (\r\n//                         <Sun className=\"h-5 w-5\" />\r\n//                       ) : (\r\n//                         <Moon className=\"h-5 w-5\" />\r\n//                       )}\r\n//                     </Button>\r\n//                   </TooltipTrigger>\r\n//                   <TooltipContent>\r\n//                     <p>\r\n//                       {darkMode\r\n//                         ? \"Switch to Light Mode\"\r\n//                         : \"Switch to Dark Mode\"}\r\n//                     </p>\r\n//                   </TooltipContent>\r\n//                 </Tooltip>\r\n//               </TooltipProvider>\r\n//               <DropdownMenu>\r\n//                 <DropdownMenuTrigger asChild>\r\n//                   <Button variant=\"ghost\" size=\"icon\">\r\n//                     <Bell className=\"h-5 w-5\" />\r\n//                   </Button>\r\n//                 </DropdownMenuTrigger>\r\n//                 <DropdownMenuContent align=\"end\" className=\"w-56\">\r\n//                   <DropdownMenuLabel>Notifications</DropdownMenuLabel>\r\n//                   <DropdownMenuSeparator />\r\n//                   <DropdownMenuItem>\r\n//                     <span>New appointment scheduled</span>\r\n//                   </DropdownMenuItem>\r\n//                   <DropdownMenuItem>\r\n//                     <span>Test results available</span>\r\n//                   </DropdownMenuItem>\r\n//                   <DropdownMenuItem>\r\n//                     <span>Prescription refill reminder</span>\r\n//                   </DropdownMenuItem>\r\n//                 </DropdownMenuContent>\r\n//               </DropdownMenu>\r\n//             </div>\r\n//           </div>\r\n//         </header>\r\n//         <div className=\"container px-6 py-8 mx-auto\">{children}</div>\r\n//       </main>\r\n//       {/* Main Content */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PatientDashboardComponent;\r\n\r\n\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Bell,\r\n  Calendar,\r\n  CreditCard,\r\n  FileText,\r\n  Moon,\r\n  Sun,\r\n  User,\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport Link from \"next/link\";\r\n\r\nconst PatientDashboardComponent = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const navItems = [\r\n    { href: \"/patient/profile\", icon: User, label: \"My Profile\" },\r\n    { href: \"/patient/appointments\", icon: Calendar, label: \"Appointments\" },\r\n    { href: \"/patient/queue\", icon: FileText, label: \"Queue Status\" },\r\n    { href: \"/patient/payments\", icon: CreditCard, label: \"Payments\" },\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className={`flex flex-col h-screen overflow-hidden ${\r\n        darkMode ? \"dark\" : \"\"\r\n      }`}\r\n    >\r\n      <header className=\"bg-white dark:bg-gray-800 shadow-md\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\r\n          <Link href=\"/patient\" className=\"flex items-center\">\r\n            <Avatar className=\"h-10 w-10 mr-3\">\r\n              <AvatarImage\r\n                src=\"/placeholder.svg?height=40&width=40\"\r\n                alt=\"Patient\"\r\n              />\r\n              <AvatarFallback>JD</AvatarFallback>\r\n            </Avatar>\r\n            <span className=\"text-xl font-semibold text-gray-800 dark:text-white\">\r\n              John Doe\r\n            </span>\r\n          </Link>\r\n          <nav>\r\n            <ul className=\"flex space-x-4\">\r\n              {navItems.map((item) => (\r\n                <li key={item.href}>\r\n                  <Link\r\n                    href={item.href}\r\n                    className=\"flex items-center px-3 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                  >\r\n                    <item.icon className=\"h-5 w-5 mr-2\" />\r\n                    <span>{item.label}</span>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" onClick={toggleDarkMode}>\r\n                    {darkMode ? (\r\n                      <Sun className=\"h-5 w-5\" />\r\n                    ) : (\r\n                      <Moon className=\"h-5 w-5\" />\r\n                    )}\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>\r\n                    {darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n                  </p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button variant=\"ghost\" size=\"icon\">\r\n                  <Bell className=\"h-5 w-5\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent align=\"end\" className=\"w-56\">\r\n                <DropdownMenuLabel>Notifications</DropdownMenuLabel>\r\n                <DropdownMenuSeparator />\r\n                <DropdownMenuItem>\r\n                  <span>New appointment scheduled</span>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem>\r\n                  <span>Test results available</span>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem>\r\n                  <span>Prescription refill reminder</span>\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 dark:bg-gray-900\">\r\n        <div className=\"container px-6 py-8 mx-auto\">{children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default PatientDashboardComponent;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}