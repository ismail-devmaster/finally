{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,mKAAgB,IAAI;AAEnC,MAAM,gBAAgB,mKAAgB,OAAO;AAE7C,MAAM,eAAe,mKAAgB,MAAM;AAE3C,MAAM,cAAc,mKAAgB,KAAK;AAEzC,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sMAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,mKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,mKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,8OAAC,gLAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,sMAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,sMAAM,UAAU,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gQACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/patient/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport {\r\n  User,\r\n  Calendar,\r\n  Clock,\r\n  FileText,\r\n  CreditCard,\r\n  HourglassIcon,\r\n  Phone,\r\n  Mail,\r\n  MapPin,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nconst page = ({ isNewPatient = false }) => {\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto\">\r\n      <h1 className=\"text-4xl font-extrabold text-gray-900 mb-8 text-center dark:text-white\">\r\n        Quick Actions Overview\r\n      </h1>\r\n      <Card className=\"w-full max-w-4xl mx-auto\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-2xl font-bold\">\r\n            Quick Actions Overview\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Profile</CardTitle>\r\n              <User className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              <div>\r\n                <p className=\"text-sm font-medium\">John Doe</p>\r\n                <p className=\"text-xs text-muted-foreground\">DOB: 05/15/1985</p>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Phone className=\"h-4 w-4 text-muted-foreground\" />\r\n                <p className=\"text-xs\">+1 (555) 123-4567</p>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Mail className=\"h-4 w-4 text-muted-foreground\" />\r\n                <p className=\"text-xs\">john.doe@example.com</p>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\r\n                <p className=\"text-xs\">123 Main St, Anytown, USA</p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">\r\n                Appointments\r\n              </CardTitle>\r\n              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              {isNewPatient ? (\r\n                <>\r\n                  <div className=\"flex items-center justify-center h-24\">\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      No upcoming appointments\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"flex justify-center\">\r\n                    <button className=\"text-sm text-blue-600 hover:underline\">\r\n                      Schedule your first appointment\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Upcoming</p>\r\n                    <div className=\"space-y-1\">\r\n                      <p className=\"text-xs\">\r\n                        Cleaning: June 15, 2023 at 10:00 AM\r\n                      </p>\r\n                      <p className=\"text-xs\">\r\n                        Check-up: August 22, 2023 at 2:30 PM\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Past</p>\r\n                    <div className=\"space-y-1\">\r\n                      <p className=\"text-xs\">\r\n                        Check-up: March 3, 2023 at 2:30 PM\r\n                      </p>\r\n                      <p className=\"text-xs\">\r\n                        Filling: January 12, 2023 at 11:00 AM\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">\r\n                Health Records\r\n              </CardTitle>\r\n              <FileText className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              {isNewPatient ? (\r\n                <>\r\n                  <div className=\"flex items-center justify-center h-24\">\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      No health records available\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"flex justify-center\">\r\n                    <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\r\n                      <DialogTrigger asChild>\r\n                        <Button\r\n                          variant=\"link\"\r\n                          className=\"text-sm text-blue-600 hover:underline\"\r\n                        >\r\n                          Complete health questionnaire\r\n                        </Button>\r\n                      </DialogTrigger>\r\n                      <DialogContent className=\"sm:max-w-[425px]\">\r\n                        <DialogHeader>\r\n                          <DialogTitle>Health Questionnaire</DialogTitle>\r\n                          <DialogDescription>\r\n                            Please fill out your health information. This helps\r\n                            us provide better care.\r\n                          </DialogDescription>\r\n                        </DialogHeader>\r\n                        <form className=\"grid gap-4 py-4\">\r\n                          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                            <Label htmlFor=\"height\" className=\"text-right\">\r\n                              Height\r\n                            </Label>\r\n                            <Input id=\"height\" className=\"col-span-3\" />\r\n                          </div>\r\n                          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                            <Label htmlFor=\"weight\" className=\"text-right\">\r\n                              Weight\r\n                            </Label>\r\n                            <Input id=\"weight\" className=\"col-span-3\" />\r\n                          </div>\r\n                          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                            <Label htmlFor=\"allergies\" className=\"text-right\">\r\n                              Allergies\r\n                            </Label>\r\n                            <Input id=\"allergies\" className=\"col-span-3\" />\r\n                          </div>\r\n                          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                            <Label htmlFor=\"medications\" className=\"text-right\">\r\n                              Medications\r\n                            </Label>\r\n                            <Textarea id=\"medications\" className=\"col-span-3\" />\r\n                          </div>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            onClick={() => setIsDialogOpen(false)}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </form>\r\n                      </DialogContent>\r\n                    </Dialog>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Recent Procedures</p>\r\n                    <ul className=\"text-xs space-y-1 list-disc list-inside\">\r\n                      <li>Filling (Tooth #18): January 12, 2023</li>\r\n                      <li>Root Canal (Tooth #30): November 5, 2022</li>\r\n                    </ul>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Allergies</p>\r\n                    <p className=\"text-xs text-red-500\">Penicillin, Latex</p>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Payments</CardTitle>\r\n              <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              {isNewPatient ? (\r\n                <>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Recent Transactions</p>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      No recent transactions\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Balance Due</p>\r\n                    <p className=\"text-lg font-bold text-green-500\">$0</p>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Recent Transactions</p>\r\n                    <ul className=\"text-xs space-y-1\">\r\n                      <li>$150 - Check-up (March 3, 2023)</li>\r\n                      <li>$300 - Filling (January 12, 2023)</li>\r\n                    </ul>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Balance Due</p>\r\n                    <p className=\"text-lg font-bold text-red-500\">$75</p>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">\r\n                Queue Status\r\n              </CardTitle>\r\n              <HourglassIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              {isNewPatient ? (\r\n                <div className=\"flex items-center justify-center h-24\">\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    No current appointment\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium\">Current Wait Time</p>\r\n                    <p className=\"text-2xl font-bold text-green-600\">15 min</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-xs\">Your appointment: 10:00 AM</p>\r\n                    <p className=\"text-xs\">Estimated start: 10:05 AM</p>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default page;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAaA;AAQA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;;;;;;;AA2BA,MAAM,OAAO,CAAC,EAAE,eAAe,KAAK,EAAE;IACpC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyE;;;;;;0BAGvF,8OAAC,yHAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,yHAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,yHAAA,CAAA,YAAS;4BAAC,WAAU;sCAAqB;;;;;;;;;;;kCAI5C,8OAAC,yHAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC,yHAAA,CAAA,OAAI;;kDACH,8OAAC,yHAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,yHAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAC3C,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;;;;;;;kDAElB,8OAAC,yHAAA,CAAA,cAAW;wCAAC,WAAU;;0DACrB,8OAAC;;kEACC,8OAAC;wDAAE,WAAU;kEAAsB;;;;;;kEACnC,8OAAC;wDAAE,WAAU;kEAAgC;;;;;;;;;;;;0DAE/C,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,oMAAA,CAAA,QAAK;wDAAC,WAAU;;;;;;kEACjB,8OAAC;wDAAE,WAAU;kEAAU;;;;;;;;;;;;0DAEzB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,kMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;kEAChB,8OAAC;wDAAE,WAAU;kEAAU;;;;;;;;;;;;0DAEzB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0MAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;kEAClB,8OAAC;wDAAE,WAAU;kEAAU;;;;;;;;;;;;;;;;;;;;;;;;0CAI7B,8OAAC,yHAAA,CAAA,OAAI;;kDACH,8OAAC,yHAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,yHAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAG3C,8OAAC,0MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;kDAEtB,8OAAC,yHAAA,CAAA,cAAW;wCAAC,WAAU;kDACpB,6BACC;;8DACE,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAE,WAAU;kEAAgC;;;;;;;;;;;8DAI/C,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAO,WAAU;kEAAwC;;;;;;;;;;;;yEAM9D;;8DACE,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAE,WAAU;8EAAU;;;;;;8EAGvB,8OAAC;oEAAE,WAAU;8EAAU;;;;;;;;;;;;;;;;;;8DAK3B,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAE,WAAU;8EAAU;;;;;;8EAGvB,8OAAC;oEAAE,WAAU;8EAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CASnC,8OAAC,yHAAA,CAAA,OAAI;;kDACH,8OAAC,yHAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,yHAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAG3C,8OAAC,8MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;kDAEtB,8OAAC,yHAAA,CAAA,cAAW;wCAAC,WAAU;kDACpB,6BACC;;8DACE,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAE,WAAU;kEAAgC;;;;;;;;;;;8DAI/C,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,2HAAA,CAAA,SAAM;wDAAC,MAAM;wDAAc,cAAc;;0EACxC,8OAAC,2HAAA,CAAA,gBAAa;gEAAC,OAAO;0EACpB,cAAA,8OAAC,2HAAA,CAAA,SAAM;oEACL,SAAQ;oEACR,WAAU;8EACX;;;;;;;;;;;0EAIH,8OAAC,2HAAA,CAAA,gBAAa;gEAAC,WAAU;;kFACvB,8OAAC,2HAAA,CAAA,eAAY;;0FACX,8OAAC,2HAAA,CAAA,cAAW;0FAAC;;;;;;0FACb,8OAAC,2HAAA,CAAA,oBAAiB;0FAAC;;;;;;;;;;;;kFAKrB,8OAAC;wEAAK,WAAU;;0FACd,8OAAC;gFAAI,WAAU;;kGACb,8OAAC,0HAAA,CAAA,QAAK;wFAAC,SAAQ;wFAAS,WAAU;kGAAa;;;;;;kGAG/C,8OAAC,0HAAA,CAAA,QAAK;wFAAC,IAAG;wFAAS,WAAU;;;;;;;;;;;;0FAE/B,8OAAC;gFAAI,WAAU;;kGACb,8OAAC,0HAAA,CAAA,QAAK;wFAAC,SAAQ;wFAAS,WAAU;kGAAa;;;;;;kGAG/C,8OAAC,0HAAA,CAAA,QAAK;wFAAC,IAAG;wFAAS,WAAU;;;;;;;;;;;;0FAE/B,8OAAC;gFAAI,WAAU;;kGACb,8OAAC,0HAAA,CAAA,QAAK;wFAAC,SAAQ;wFAAY,WAAU;kGAAa;;;;;;kGAGlD,8OAAC,0HAAA,CAAA,QAAK;wFAAC,IAAG;wFAAY,WAAU;;;;;;;;;;;;0FAElC,8OAAC;gFAAI,WAAU;;kGACb,8OAAC,0HAAA,CAAA,QAAK;wFAAC,SAAQ;wFAAc,WAAU;kGAAa;;;;;;kGAGpD,8OAAC,6HAAA,CAAA,WAAQ;wFAAC,IAAG;wFAAc,WAAU;;;;;;;;;;;;0FAEvC,8OAAC,2HAAA,CAAA,SAAM;gFACL,MAAK;gFACL,SAAS,IAAM,gBAAgB;0FAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yEASX;;8DACE,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAG,WAAU;;8EACZ,8OAAC;8EAAG;;;;;;8EACJ,8OAAC;8EAAG;;;;;;;;;;;;;;;;;;8DAGR,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAE,WAAU;sEAAuB;;;;;;;;;;;;;;;;;;;;;;;;;0CAM9C,8OAAC,yHAAA,CAAA,OAAI;;kDACH,8OAAC,yHAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,yHAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAC3C,8OAAC,kNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;;;;;;;kDAExB,8OAAC,yHAAA,CAAA,cAAW;wCAAC,WAAU;kDACpB,6BACC;;8DACE,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAE,WAAU;sEAAgC;;;;;;;;;;;;8DAI/C,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAE,WAAU;sEAAmC;;;;;;;;;;;;;yEAIpD;;8DACE,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAG,WAAU;;8EACZ,8OAAC;8EAAG;;;;;;8EACJ,8OAAC;8EAAG;;;;;;;;;;;;;;;;;;8DAGR,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAE,WAAU;sEAAiC;;;;;;;;;;;;;;;;;;;;;;;;;0CAMxD,8OAAC,yHAAA,CAAA,OAAI;;kDACH,8OAAC,yHAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,8OAAC,yHAAA,CAAA,YAAS;gDAAC,WAAU;0DAAsB;;;;;;0DAG3C,8OAAC,gNAAA,CAAA,gBAAa;gDAAC,WAAU;;;;;;;;;;;;kDAE3B,8OAAC,yHAAA,CAAA,cAAW;wCAAC,WAAU;kDACpB,6BACC,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAE,WAAU;0DAAgC;;;;;;;;;;iEAK/C;;8DACE,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAsB;;;;;;sEACnC,8OAAC;4DAAE,WAAU;sEAAoC;;;;;;;;;;;;8DAEnD,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAU;;;;;;sEACvB,8OAAC;4DAAE,WAAU;sEAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU3C;uCAEe"}},
    {"offset": {"line": 1258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}